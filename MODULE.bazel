# Copyright (c) 2024 The Authors. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Authors: liubang (it.liubang@gmail.com)

module(
    name = "playground",
    version = "1.0",
)

bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "platforms", version = "0.0.11")
bazel_dep(name = "rules_license", version = "1.0.0")

# Hedron's Compile Commands Extractor for Bazel
# https://github.com/hedronvision/bazel-compile-commands-extractor
bazel_dep(name = "hedron_compile_commands", dev_dependency = True)
git_override(
    module_name = "hedron_compile_commands",
    commit = "1e08f8e0507b6b6b1f4416a9a22cf5c28beaba93",
    patch_strip = 1,
    patches = [
        "//bazel:bazel-compile-commands-extractor.patch",
    ],
    remote = "https://github.com/hedronvision/bazel-compile-commands-extractor.git",
)

# apple support
bazel_dep(name = "apple_support", version = "1.22.0", repo_name = "build_bazel_apple_support")

# foreign cc
bazel_dep(name = "rules_cc", version = "0.1.2")
bazel_dep(name = "rules_foreign_cc", version = "0.15.0")

# dpes for c/cpp
bazel_dep(name = "abseil-cpp", version = "20250127.1")
single_version_override(
    module_name = "abseil-cpp",
    version = "20250127.1",
)

bazel_dep(name = "s2geometry")
git_override(
    module_name = "s2geometry",
    commit = "0fb1b8a1474f3137c8b44a7861e31f8efd1370e2",
    remote = "https://github.com/google/s2geometry",
    strip_prefix = "src",
)

bazel_dep(name = "boringssl", version = "0.20241024.0")
single_version_override(
    module_name = "boringssl",
    version = "0.20241024.0",
)

### grpc && protobuf
bazel_dep(name = "rules_proto", version = "7.0.2")
bazel_dep(name = "protoc-gen-validate", version = "1.2.1.bcr.1")
bazel_dep(name = "protobuf", version = "30.0")
bazel_dep(name = "grpc", version = "1.72.0")
### grpc && protobuf

bazel_dep(name = "openssl", version = "3.3.1.bcr.1")
bazel_dep(name = "fmt", version = "11.1.4")
bazel_dep(name = "bzip2", version = "1.0.8")
bazel_dep(name = "zlib", version = "1.3")
bazel_dep(name = "zstd", version = "1.5.6")
bazel_dep(name = "libuv", version = "1.48.0")
bazel_dep(name = "curl", version = "8.8.0")
bazel_dep(name = "onetbb", version = "2022.1.0")
bazel_dep(name = "liburing", version = "2.10")
bazel_dep(name = "crc32c", version = "1.1.0")
bazel_dep(name = "snappy", version = "1.2.1")
bazel_dep(name = "lemon", version = "3.42.0")
bazel_dep(name = "sqlite3", version = "3.42.0")
bazel_dep(name = "nlohmann_json", version = "3.11.2")
bazel_dep(name = "glog", version = "0.7.1")
bazel_dep(name = "gflags", version = "2.2.2")
bazel_dep(name = "asio", version = "1.32.0")
bazel_dep(name = "isa-l", version = "2.31")
bazel_dep(name = "xxhash", version = "0.8.3")
bazel_dep(name = "magic_enum", version = "0.9.6")
bazel_dep(name = "proxygen", version = "2025.02.10.00")
bazel_dep(name = "folly", version = "2025.01.13.00.bcr.3")
bazel_dep(name = "rocksdb", version = "9.11.2")
bazel_dep(name = "pybind11_bazel", version = "2.13.6")

# boost
bazel_dep(name = "boost.crc", version = "1.87.0")
bazel_dep(name = "boost.scope", version = "1.87.0")
bazel_dep(name = "boost.date_time", version = "1.87.0")
bazel_dep(name = "boost.mpl", version = "1.87.0")
bazel_dep(name = "boost.parameter", version = "1.87.0")
bazel_dep(name = "boost.utility", version = "1.87.0")
bazel_dep(name = "boost.algorithm", version = "1.87.0")
single_version_override(
    module_name = "boost.algorithm",
    version = "1.87.0",
)

bazel_dep(name = "boost.container", version = "1.87.0")
single_version_override(
    module_name = "boost.container",
    version = "1.87.0",
)

bazel_dep(name = "boost.conversion", version = "1.87.0")
single_version_override(
    module_name = "boost.conversion",
    version = "1.87.0",
)

bazel_dep(name = "boost.filesystem", version = "1.87.0")
single_version_override(
    module_name = "boost.filesystem",
    version = "1.87.0",
)

bazel_dep(name = "boost.thread", version = "1.87.0")
single_version_override(
    module_name = "boost.thread",
    version = "1.87.0",
)

bazel_dep(name = "boost.variant", version = "1.87.0")
single_version_override(
    module_name = "boost.variant",
    version = "1.87.0",
)

bazel_dep(name = "boost.lexical_cast", version = "1.87.0")
single_version_override(
    module_name = "boost.lexical_cast",
    version = "1.87.0",
)

bazel_dep(name = "boost.optional", version = "1.87.0")
single_version_override(
    module_name = "boost.optional",
    version = "1.87.0",
)

bazel_dep(name = "boost.bind", version = "1.87.0")
single_version_override(
    module_name = "boost.bind",
    version = "1.87.0",
)

bazel_dep(name = "boost.assert", version = "1.87.0")
single_version_override(
    module_name = "boost.assert",
    version = "1.87.0",
)

bazel_dep(name = "boost.config", version = "1.87.0")
single_version_override(
    module_name = "boost.config",
    version = "1.87.0",
)

bazel_dep(name = "boost.core", version = "1.87.0")
single_version_override(
    module_name = "boost.core",
    version = "1.87.0",
)

bazel_dep(name = "boost.detail", version = "1.87.0")
single_version_override(
    module_name = "boost.detail",
    version = "1.87.0",
)

bazel_dep(name = "boost.function", version = "1.87.0")
single_version_override(
    module_name = "boost.function",
    version = "1.87.0",
)

bazel_dep(name = "boost.integer", version = "1.87.0")
single_version_override(
    module_name = "boost.integer",
    version = "1.87.0",
)

bazel_dep(name = "boost.iterator", version = "1.87.0")
single_version_override(
    module_name = "boost.iterator",
    version = "1.87.0",
)

bazel_dep(name = "boost.iostreams", version = "1.87.0")
single_version_override(
    module_name = "boost.iostreams",
    version = "1.87.0",
)

# for test
bazel_dep(name = "catch2", version = "3.8.1", dev_dependency = True)
bazel_dep(name = "googletest", version = "1.16.0", dev_dependency = True)
bazel_dep(name = "google_benchmark", version = "1.9.2", dev_dependency = True)
bazel_dep(name = "nanobench", version = "4.3.11", dev_dependency = True)

# bison and flex
bazel_dep(name = "rules_m4", version = "0.2.4")
bazel_dep(name = "rules_bison", version = "0.3.1")
bazel_dep(name = "rules_flex", version = "0.3.1")

bison = use_extension(
    "@rules_bison//bison/extensions:bison_repository_ext.bzl",
    "bison_repository_ext",
)
bison.repository(
    name = "bison",
    extra_copts = ["-O3"],
    version = "3.3.2",
)
use_repo(bison, "bison")

register_toolchains("@bison//:toolchain")

flex = use_extension(
    "@rules_flex//flex/extensions:flex_repository_ext.bzl",
    "flex_repository_ext",
)
flex.repository(
    name = "flex",
    extra_copts = ["-O3"],
    version = "2.6.4",
)
use_repo(flex, "flex")

register_toolchains("@flex//:toolchain")

###################################################################################################
# for go
###################################################################################################
bazel_dep(name = "rules_go", version = "0.55.1")
bazel_dep(name = "gazelle", version = "0.43.0")

go_sdk = use_extension("@rules_go//go:extensions.bzl", "go_sdk")
go_sdk.download(version = "1.23.0")

go_deps = use_extension("@gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//go:go.mod")

# All *direct* Go dependencies of the module have to be listed explicitly.
use_repo(
    go_deps,
    "com_github_onsi_ginkgo_v2",
    "com_github_onsi_gomega",
)

###################################################################################################
#  python
###################################################################################################
bazel_dep(name = "rules_python", version = "1.5.1")
bazel_dep(name = "rules_python_gazelle_plugin", version = "1.5.1")

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    configure_coverage_tool = True,
    is_default = True,
    python_version = "3.13",
)

uv = use_extension(
    "@rules_python//python/uv:uv.bzl",
    "uv",
    dev_dependency = True,
)
uv.configure(version = "0.6.2")

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
    hub_name = "pip",
    python_version = "3.13",
    experimental_index_url = "https://mirrors.aliyun.com/pypi/simple",
    requirements_lock = "//python:requirements_lock.txt",
)
use_repo(pip, "pip")
